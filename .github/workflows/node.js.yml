# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Node.js CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  Build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Compile
        run: echo start deploy

  DeployStaging:
    name: Deploy to Staging
    needs: [Build]
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./client
    environment: 
      name: Staging
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.TOKEN }}
          
      - name: Build Vue App
        working-directory: ./client
        shell: bash
        run: |
          set -e
          npm install
          echo vue installed
          npm run build
          echo vue built
          
      - name: Publish Staging Env
        uses: crazy-max/ghaction-github-pages@v2.6.0
        with:
          repo: ${{ secrets.REPO_NAME }}
          build_dir: client/dist
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }}
          APP_URL: ${{ secrets.APP_URL }}
          
  DeployProduction:
    name: Deploy to Production
    needs: [DeployStaging]
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./client
    environment: 
      name: Production
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.TOKEN }}

      - name: Build Vue App
        working-directory: ./client
        shell: bash
        run: |
          set -e
          npm install
          echo vue installed
          npm run build
          echo vue built

      - name: Publish Staging Env
        uses: crazy-max/ghaction-github-pages@v2.6.0
        with:
          repo: ${{ secrets.REPO_NAME }}
          build_dir: client/dist
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }}
          APP_URL: ${{ secrets.APP_URL }}
